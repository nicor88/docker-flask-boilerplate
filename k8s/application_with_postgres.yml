apiVersion: v1
kind: Namespace
metadata:
  name: dev-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume
  namespace: dev-postgres
  labels:
    app: flask
    tier: db
    stage: dev
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: normal
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: dev-postgres
spec:
  type: LoadBalancer
  selector:
    app: flask
    tier: db
    stage: dev
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: dev-postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: flask
      tier: db
      stage: dev
  template:
    metadata:
      labels:
        app: flask
        tier: db
        stage: dev
    spec:
      hostname: postgres
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-volume
      containers:
      - name: postgres
        image: postgres:11
        ports:
        - name: postgres
          containerPort: 5432
        env:
         - name: POSTGRES_USER
           value: flask
         - name: POSTGRES_PASSWORD
           value: flask
         - name: POSTGRES_DB
           value: dev
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: flask
  namespace: dev-postgres
spec:
  type: LoadBalancer
  selector:
    app: flask
    tier: web
    stage: dev
  ports:
    - name: flask
      protocol: TCP
      port: 80
      targetPort: flask
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: flask
  namespace: dev-postgres
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: flask
        tier: web
        stage: dev
    spec:
      restartPolicy: Always
      containers:
      - name: web
        image: 270870090353.dkr.ecr.us-east-1.amazonaws.com/dev-flask-postgres:latest
        env:
        - name: STAGE
          value: dev
        - name: POSTGRES_HOST
          value: "postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "dev"
        - name: POSTGRES_USER
          value: "flask"
        - name: POSTGRES_PASSWORD
          value: "flask"
        ports:
        - name: flask
          containerPort: 8000
